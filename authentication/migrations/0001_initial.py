# Generated by Django 5.1.7 on 2025-03-08 22:43

import django.contrib.auth.models
import django.core.validators
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False, verbose_name='uuid')),
                ('phone_number', models.BigIntegerField(error_messages={'unique': 'This number is already registered against a user.'}, unique=True, validators=[django.core.validators.MinValueValidator(3000000000), django.core.validators.MaxValueValidator(3999999999)], verbose_name='phone number')),
                ('new_number', models.BigIntegerField(default=None, error_messages={'unique': 'This number is already registered against a user.'}, null=True, unique=True, validators=[django.core.validators.MinValueValidator(3000000000), django.core.validators.MaxValueValidator(3499999999)], verbose_name='new number')),
                ('email', models.EmailField(default=None, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('otp', models.IntegerField(default=None, null=True)),
                ('otp_attempt', models.IntegerField(default=0)),
                ('password_change', models.BooleanField(default=False, verbose_name='can change password')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
